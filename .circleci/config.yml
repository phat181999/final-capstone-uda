version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.0.3
  kubernetes: circleci/kubernetes@0.11.2

executors:
  python:
    docker:
      - image: circleci/python:3.7.3-stretch
  aws:
    docker:
      - image: amazon/aws-cli

jobs:
  lint-app:
    executor: python
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            sudo chmod +x /bin/hadolint
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  build-push-docker-image:
    machine: true
    working_directory: ~/app
    steps:
      - checkout

      - run:
          name: build and push docker image
          command: |
            #Login to docker hub
            docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
            # Build image and add a descriptive tag
            docker build --tag=final-project-phat .
            # List docker images
            docker image ls
            # Push image to a docker repository
            docker tag final-project-phat phat99/final-project-phat
            docker push phat99/final-project-phat

  # create-cluster:
  #   executor: aws-eks/python3
  #   parameters:
  #     cluster-name:
  #       description: |
  #         final-project
  #       type: string
  #   steps:
  #     - aws-eks/create-cluster:
  #         cluster-name: << parameters.cluster-name >>

  deploy-to-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          final-project
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: final-project
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          # get-rollout-status: true
          resource-file-path: deployment.yml
          resource-name: deployment/final-project-phat

  check-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          final-project
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: final-project
      - run:
          name: check cluster
          command: |
            kubectl get nodes
            kubectl get deployment

workflows:
  deployment:
    jobs:
      - lint-app
      - build-push-docker-image:
          requires: [lint-app]
      # - create-cluster:
      #     cluster-name: final-project
      #     requires: [build-push-docker-image]
      - deploy-to-cluster:
          cluster-name: final-project
          requires: [build-push-docker-image]
      - aws-eks/update-container-image:
          cluster-name: final-project
          container-image-updates: final-project-phat=phat99/final-project-phat
          post-steps:
            - kubernetes/delete-resource:
                resource-names: final-project-phat
                resource-types: deployment
                wait: true
          record: true
          requires: [deploy-to-cluster]
          resource-name: deployment/final-project-phat
      - check-cluster:
          cluster-name: final-project
          requires: [aws-eks/update-container-image]
      # - aws-eks/delete-cluster:
      #     cluster-name: final-project-phat
      #     requires: [check-cluster]
