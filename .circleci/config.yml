version: 2.1

orbs:
  aws-eks: circleci/aws-eks@0.2.3
  aws-ecr: circleci/aws-ecr@3.1.0

commands:
  install_awscli:
    description: Install AWS CLI v2
    steps:
      - run:
          name: Install AWS CLI v2
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install

jobs:
  build-and-deploy:
    docker:
      - image: circleci/node:13.8.0
      - image: circleci/python:2.7
    steps:
      - checkout
      # Step 1: Linting
      - run:
          name: install dependencies
          command: |
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            sudo chmod +x /bin/hadolint
      - run:
          name: Run Lint
          command: |
            hadolint Dockerfile
      - run:
          name: Install AWS CLI
          command: |
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws

      - run:
          name: Verify AWS CLI Installation
          command: aws --version
      - setup_remote_docker:
          version: 20.10.7
      # Step 2: Build Docker Image
      - run:
          name: Build Docker Image
          command: |
            export TAG=v${CIRCLE_BUILD_NUM}
            export IMAGE_NAME=capstone-project-final

            docker build -t phat99/$IMAGE_NAME:$TAG .

      # Step 3: Blue/Green Deployment
      - run:
          name: Install AWS IAM Authenticator
          command: |
            if which aws-iam-authenticator > /dev/null; then
              echo "AWS IAM Authenticator for Kubernetes is already installed"
              exit 0
            fi

            curl -o aws-iam-authenticator https://amazon-eks.s3.us-east-1.amazonaws.com/1.20.7/2021-04-12/bin/linux/amd64/aws-iam-authenticator
            chmod +x aws-iam-authenticator
            sudo mv aws-iam-authenticator /usr/local/bin/

      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: capstone-project-final
          install-kubectl: true
          aws-region: $AWS_DEFAULT_REGION

      - run:
          name: Deploy Kubernetes Cluster
          command: |
            aws cloudformation deploy --stack-name capstone-project-final --template-file cloudformation/cloudformation.yml --parameter-overrides ID=$ID --capabilities CAPABILITY_IAM

            # Wait for the CloudFormation stack to complete
            aws cloudformation wait stack-create-complete --stack-name capstone-project-final

            # Retrieve the Kubernetes cluster details
            export KUBECONFIG=$PWD/kubeconfig.yaml
            aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name capstone-project-final --kubeconfig $KUBECONFIG

      # Step 5: Deploy Application to Kubernetes Cluster
      - run:
          name: Deploy Application
          command: |
            kubectl apply -f deployments/deployments.yaml

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-and-deploy
